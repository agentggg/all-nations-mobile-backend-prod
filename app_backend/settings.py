"""
Django settings for app_backend project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
testing
"""

import os
import environ
from pathlib import Path
import django_heroku
import sentry_sdk
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
from django.db.backends.mysql.base import DatabaseWrapper
DatabaseWrapper.data_types['DateTimeField']='datetime'
env = environ.Env()
# reading .env file
environ.Env.read_env()

sentry_sdk.init(
    dsn="https://5ea09012624c444f89fc7f25f91ab844@o1420743.ingest.sentry.io/6765891",
    integrations=[   
    ],

    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    # We recommend adjusting this value in production.
    traces_sample_rate=1.0,

    # If you wish to associate users to errors (assuming you are using
    # django.contrib.auth) you may enable sending PII data.
    send_default_pii=True
)
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")
DJANGO_GUID = {
    'GUID_HEADER_NAME': 'Correlation-ID',
    'VALIDATE_GUID': True,
    'RETURN_HEADER': True,
    'EXPOSE_HEADER': True,
    'INTEGRATIONS': [],
    'IGNORE_URLS': [],
    'UUID_LENGTH': 32,
}
# for django guid for debug id tracker

CLOUDINARY_URL={
    'CLOUD_NAME':env('CLOUDINARY_CLOUD_NAME'),
    'API_KEY':env('CLOUDINARY_API_KEY'),
    'API_SECRET':env('CLOUDINARY_API_SECRET')
}
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/
DEBUG = True

ALLOWED_HOSTS = [
    'nations4christ.net',
]


INSTALLED_APPS = [
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',
    'graphene_django',
    'app_backend_api',
    'django.contrib.auth',
    'django_extensions',
    'django_twilio',
    'corsheaders',
    'rest_framework',
    # 'django_custom_user_migration',
    'rest_framework.authtoken',
    # instructions says to disable that, but that is the table. so with this 
    # disabled, i don't know where token is suppose to go?
    # yea one sec 
    'django_celery_beat',
    # 'django.contrib.gis',
    'imagekit',

]


CORS_ALLOWED_ORIGINS = [
    'https://www.nations4christ.net',
]
#$ celery -A app_backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

#https://www.stackhawk.com/blog/django-cors-guide/
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django_guid.middleware.guid_middleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env("EMAIL_HOST")
EMAIL_PORT = env("EMAIL_PORT")
EMAIL_HOST_USER = env("email")
SERVER_EMAIL = env("EMAIL_HOST")
EMAIL_HOST_PASSWORD = env("pas")
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False

ADMINS = [
    ("Stevenson Gerard Eustache", "evolvingtechnologies1@outlook.com")
]
# send emails and debug error to admins

ROOT_URLCONF = 'app_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../frontend', 'src')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CELERY_BROKER_URL = env("REDIS_HOST")
CELERY_RESULT_BACKEND = env("REDIS_HOST")
BROKER_URL = env("REDIS_HOST")

WSGI_APPLICATION = 'app_backend.wsgi.application'
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

SPATIALITE_LIBRARY_PATH = 'mod_spatialite.so'

DATABASES = {
#https://stackoverflow.com/questions/43612243/install-mysqlclient-for-django-python-on-mac-os-x-sierra/54521244
#https://python.plainenglish.io/connect-django-with-database-43f1965565e0
    'default': {
        'ENGINE': env("ENGINE_NAME"),
        'NAME': env("DATABASE_NAME"), #Database Name
        'USER': env("DATABASE_USER"), #Your Postgresql user
        'PASSWORD': env("DATABASE_PASSWORD"), #Your Postgresql password
        'HOST': env("DATABASE_HOST"),
        'PORT': env("DATABASE_PORT")
    },
    'OPTIONS': {
        'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }    
    }

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE='UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

# Extra places for collectstatic to find static files.
STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# STATICFILES_DIRS = [os.path.join(BASE_DIR, '../frontend', 'build', 'static')]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CACHES = {
    "default": {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        "LOCATION": "test_table",
        "OPTIONS": {
            "timeout": 1,
            "MAX_ENTRIES" : 4
        }
    }
}
CORS_REPLACE_HTTPS_REFERER      = True
HOST_SCHEME                     = "https://"
SECURE_PROXY_SSL_HEADER         = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT             = True
# force https
SESSION_COOKIE_SECURE           = True
# CSRF protection prevents you from accidentally sending your session and your CSRF cookie over HTTP by accident.
CSRF_COOKIE_SECURE              = True
# CSRF protection prevents you from accidentally sending your session and your CSRF cookie over HTTP by accident.
SECURE_FRAME_DENY               = True
SECURE_BROWSER_XSS_FILTER       = True 
# Cross-site Scripting protection
SECURE_CONTENT_TYPE_NOSNIFF     = True
# Cross-site Scripting protection
SECURE_HSTS_SECONDS             = 86400 
# The above line will protect your web application from man-in-the-middle attacks and will force a connection over HTTPS.
SECURE_HSTS_PRELOAD             = True 
# The above line will protect your web application from man-in-the-middle attacks and will force a connection over HTTPS.
SECURE_HSTS_INCLUDE_SUBDOMAINS  = True
# The above line will protect your web application from man-in-the-middle attacks and will force a connection over HTTPS.
django_heroku.settings(locals())
# django_heroku.settings(locals())

AUTH_USER_MODEL = "app_backend_api.CustomUser"  # new
# # custom user model database for login
# Application definition
